/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.guimod1.guiclasses;

import com.mycompany.guimod1.businesslayer.ConnectionClass;
import com.mycompany.guimod1.system.SystemLayer;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author danaa
 */
public class ManageInventory extends javax.swing.JFrame {

    /**
     * Creates new form ManageInventory
     */
    public ManageInventory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Remove = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        SelectItem = new javax.swing.JComboBox<>();
        id = new javax.swing.JLabel();
        showdata = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Inventorytable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setEndColor(new java.awt.Color(86, 180, 211));
        kGradientPanel1.setStartColor(new java.awt.Color(52, 143, 80));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANAGE INVENTORY");

        Remove.setBackground(new java.awt.Color(51, 51, 51));
        Remove.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Remove.setForeground(new java.awt.Color(255, 102, 0));
        Remove.setText("REMOVE");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        Add.setBackground(new java.awt.Color(51, 51, 51));
        Add.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Add.setForeground(new java.awt.Color(255, 102, 0));
        Add.setText("ADD");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        SelectItem.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        SelectItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bin", "Dumpster", "RecyclingBin" }));
        SelectItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectItemActionPerformed(evt);
            }
        });

        id.setBackground(new java.awt.Color(102, 102, 102));
        id.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        id.setForeground(new java.awt.Color(255, 255, 255));
        id.setText("id");

        showdata.setText("SHOW");
        showdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showdataActionPerformed(evt);
            }
        });

        Inventorytable.setBackground(new java.awt.Color(51, 51, 51));
        Inventorytable.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        Inventorytable.setForeground(new java.awt.Color(255, 255, 255));
        Inventorytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "id", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Inventorytable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InventorytableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Inventorytable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(SelectItem, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(showdata, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Add)
                        .addGap(69, 69, 69)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(Remove)
                        .addGap(111, 111, 111))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(331, 331, 331))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectItem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(showdata)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel2);

        kGradientPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(260, 150, 966, 634);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1558, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    SystemLayer smi = new SystemLayer();
    String selectedValue;
    int removeid;
    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        smi.removingbins(selectedValue,removeid);
    }//GEN-LAST:event_RemoveActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        smi.addingbins(selectedValue);
    }//GEN-LAST:event_AddActionPerformed

    private void SelectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectItemActionPerformed
        // TODO add your handling code here:
        Object selectedObject = SelectItem.getSelectedItem();

        // Check if an item is selected
        if (selectedObject != null) {
            // Convert the selected object to String
            selectedValue = selectedObject.toString();

            // Now you can use the selectedValue as needed
            // TODO: Add your handling code here with the selectedValue
        }
    }//GEN-LAST:event_SelectItemActionPerformed

    private void showdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showdataActionPerformed
        // TODO add your handling code here:
        try {
            // Establish database connection
             ConnectionClass conn = new ConnectionClass();
             Connection connection = conn.getConnectionString();

            Statement st = connection.createStatement();
            String sql = "SELECT * FROM Bin";
            ResultSet rs = st.executeQuery(sql);
            DefaultTableModel tb1Model = (DefaultTableModel) Inventorytable.getModel();
            if(selectedValue=="Bin")
            {
                sql = "SELECT * FROM Bin";
                rs = st.executeQuery(sql);

                // Clear existing data in the table model

                tb1Model.setRowCount(0);

                while (rs.next()) {
                    String id = String.valueOf(rs.getInt("binID"));
                    String status = rs.getString("status");

                    // Add data to the table model
                    String[] tbData = {id, status};
                    tb1Model.addRow(tbData);
                }
            }
            else if(selectedValue=="Dumpster")
            {
                sql = "SELECT * FROM Dumpster";
                rs = st.executeQuery(sql);

                // Clear existing data in the table model
                tb1Model.setRowCount(0);

                while (rs.next()) {
                    String id = String.valueOf(rs.getInt("dumpsterId"));
                    String status = rs.getString("status");

                    // Add data to the table model
                    String[] tbData = {id, status};
                    tb1Model.addRow(tbData);
                }
            }
            else if(selectedValue=="RecyclingBin")
            {
                sql = "SELECT * FROM RecyclingBin";
                rs = st.executeQuery(sql);

                // Clear existing data in the table model
                tb1Model.setRowCount(0);

                while (rs.next()) {
                    String id = String.valueOf(rs.getInt("recyclingBinId"));
                    String status = rs.getString("status");

                    // Add data to the table model
                    String[] tbData = {id, status};
                    tb1Model.addRow(tbData);
                }
            }
            // Add an empty rows
            for (int i=0 ; i<20 ; i++)
            {
                String[] emptyRow = {"", "", ""}; // Adjust the number of empty strings based on the number of columns
                tb1Model.addRow(emptyRow);
            }

            // Close resources
            rs.close();
            st.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_showdataActionPerformed

    private void InventorytableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InventorytableMouseClicked
        // TODO add your handling code here:
        int i=Inventorytable.getSelectedRow();
        TableModel model=Inventorytable.getModel();
        String idText = model.getValueAt(i, 0).toString();
        removeid = Integer.parseInt(idText);
        id.setText(idText);
    }//GEN-LAST:event_InventorytableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTable Inventorytable;
    private javax.swing.JButton Remove;
    private javax.swing.JComboBox<String> SelectItem;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JButton showdata;
    // End of variables declaration//GEN-END:variables
}
